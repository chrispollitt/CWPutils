#!/bin/bash
# -*-Shell-*-

#################################################
#                                               #
#   Configure script for env2                   #
#                                               #
#################################################

###################################
# Prepare the sample_script with the desired #! line
###################################
function set_sample_script {
  local iargs="$1"
  local inter="$PWD/sample_interpreter"
  
  echo "#!$inter $iargs" > sample_script.si
  cat sample_script.si.template >> sample_script.si
  chmod 755 sample_script.si
}

###################################
# main
###################################
function main {
  local ks

  # Clean ####
  echo "1. Cleaning"
  make clean

  # Test to see kernel behaviour of #! splitting #####
  echo "2. Testing kernel #! parsing"
  > config.hh
  make dumpargs
  set_sample_script "-c:'b a b' ~~ -3:'g a g'"
  script_args="-6:'p a p'"
  ln -fs dumpargs sample_interpreter
  arg1=$(./sample_script.si $script_args 2>/dev/null| grep '^arg1=')
  if   [[ $arg1 == *"g a r''" ]]; then
    echo "config info: kernel does NOT split #! line"
    echo "#define KERNEL_SPLIT 0" >> config.hh
    ks=0
  elif [[ $arg1 == *"-c:'b'"  ]]; then
    echo "config info: kernel DOES split #! line, but does not handle quoted whitespace"
    echo "#define KERNEL_SPLIT 1" >> config.hh
    ks=1
  else
    echo "config error: unexpected result from kernel parsing of #! line"
    echo "$arg1"
    exit 1
  fi

  # copy correct test exp to t dir
  echo "3. Fixing paths"
  cp t/ks$ks/* t

  # Fix paths ####
  echo "4. Fixing paths"
  make fixpaths
  
}
main ${1+"$@"}
